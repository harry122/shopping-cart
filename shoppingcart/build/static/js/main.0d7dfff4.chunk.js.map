{"version":3,"sources":["containers/Description.js","containers/Quantity.js","containers/ImageContent.js","components/MainCotainer.js","containers/Modal.js","containers/Footer.js","components/App.js","serviceWorker.js","index.js"],"names":["Description","data","increaseQuantity","className","brandName","productName","quantity","MRP","style","fontWeight","price","id","onClick","Quantity","decreaseQuantity","type","name","e","src","alt","height","width","value","orderItem","readOnly","ids","document","querySelector","btn","parseInt","target","hideContent","ImageContent","img","discount","MainContainer","productList","imageURL","offerText","ShowModal","amount","itemQuantity","togg","window","onclick","event","modal","getElementById","display","color","fontSize","marginTop","Footer","state","toggle","toggleModal","setState","padding","this","props","Component","App","Inputitems","Firebase","database","ref","on","snapshot","val","items","cost","filter","item","preState","renderList","map","cart","key","MainCotainer","position","top","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","ReactDOM","render","StrictMode","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.0d7dfff4.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Description({data, increaseQuantity}) {\r\n\r\nif(data) {\r\n\r\n    return(\r\n        <div className=\"description\">\r\n               <div className=\"title\">{data.brandName}</div>\r\n               <div>{data.productName}</div>\r\n               <div>{data.quantity}</div>\r\n               <div>MRP: {data.MRP}</div>\r\n               <div><span style={{fontWeight:700}}>Rs. {data.price}</span></div>\r\n               <button className=\"add_cart\" id=\"myBtn\" onClick={() => increaseQuantity(data.id,data.price)}>Add cart</button>\r\n         </div>\r\n\r\n    )\r\n}\r\n    return  null;   \r\n\r\n}\r\n\r\nexport default Description;","import React from 'react'\r\n\r\nfunction Quantity({data, increaseQuantity , decreaseQuantity }) {\r\n\r\nconst hideContent = (e) => {\r\n  let ids = document.querySelector(`.id${data.id}`);\r\n  let btn = document.querySelector(`#id${data.id}`)\r\n  if((parseInt(ids.value) === 0) && e.target.id === btn.id) {\r\n  return true\r\n  }\r\n    decreaseQuantity(data.id, data.price)\r\n}\r\n\r\n    return(\r\n        <div className=\"quantity\">\r\n            <div className=\"btns\">\r\n                <button className=\"plus-btn\" type=\"button\" name=\"button\"  onClick={(e) => increaseQuantity(data.id, data.price)}>\r\n                  <img src=\"images/plus.svg\" alt=\"plus\" style={{height: \"19px\", width: \"14px\"}}/>\r\n                </button>\r\n\r\n                <input\r\n                  className={`content id${data.id}`} \r\n                  type=\"text\" \r\n                  name=\"name\"\r\n                  value={data.orderItem}\r\n                  readOnly\r\n                />\r\n\r\n                <button className=\"minus-btn\" id={`id${data.id}`} type=\"button\" name=\"button\" onClick={(e) => hideContent(e) }>\r\n                  <img src=\"images/minus.png\" alt=\"minus\" id={`id${data.id}`} style={{height: \"19px\", width: \"16px\"}} />\r\n                </button>\r\n            </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Quantity;","import React from 'react'\r\n\r\nfunction ImageContent({img,discount}) {\r\n    return(\r\n        <div>\r\n            <div className=\"image\">\r\n                 <img className=\"img\" src={img} alt=\"\" />\r\n            </div>\r\n            {discount}\r\n         </div>\r\n    )\r\n}\r\n\r\nexport default ImageContent;","import React from 'react'\r\nimport Description from '../containers/Description';\r\nimport Quantity from '../containers/Quantity';\r\nimport ImageContent from '../containers/ImageContent'\r\n\r\nfunction MainContainer({data, decreaseQuantity, increaseQuantity , productList}) {\r\n\r\n    return(\r\n        <>\r\n            <ImageContent img={data.imageURL} discount={data.offerText} />\r\n            <Description data={data} increaseQuantity={increaseQuantity} />\r\n            <Quantity data={data} decreaseQuantity={decreaseQuantity} increaseQuantity={increaseQuantity} />\r\n        </> \r\n    )\r\n}\r\n\r\nexport default MainContainer;","import React from 'react'\r\nimport './Modal.css'\r\n\r\nconst ShowModal = ({amount, itemQuantity, togg}) => {  \r\n\r\n        \r\n    window.onclick = function(event) {  \r\n        var modal = document.getElementById(\"myModal\");\r\n        if (event.target === modal) {\r\n          modal.style.display = \"none\";\r\n          togg();\r\n        }\r\n      }\r\n\r\n    return(  \r\n    <div id=\"myModal\" className=\"modal\">\r\n        <div className=\"modal-content\">\r\n        { \r\n        (itemQuantity && amount) ?\r\n         <div>\r\n            <p style={{color: \"black\", fontSize:\"25px\", fontWeight:600}}>Your Transaction is successfull !</p>\r\n            <p style={{color: \"black\", marginTop:\"10px\", fontSize:\"20px\"}}>Total cost is <span style={{fontWeight:600, fontSize:\"21px\"}}>{amount}</span></p>\r\n        </div>\r\n         : <p style={{color: \"black\", fontSize:\"25px\", fontWeight:500}}>No item in your cart.</p>   \r\n        }\r\n         <button className=\"close\" onClick={togg}>Ok</button>\r\n</div>\r\n</div>\r\n    )\r\n}\r\n\r\n\r\nexport default ShowModal;","import React, { Component } from 'react'\r\nimport './Footer.css'\r\nimport ShowModal from './Modal'\r\n\r\nclass Footer extends Component{\r\n    state= {\r\n        toggle: false\r\n    }\r\n\r\n    toggleModal = () => {\r\n        this.setState({\r\n            toggle: !this.state.toggle\r\n        })\r\n    }\r\n\r\n render() {\r\n\r\n\r\n    return(\r\n        <div className=\"footer\">\r\n            <div className=\"showRes\">\r\n                <div style={{color: \"black\",padding:'5px 0'}}>Qty: {this.props.itemQuantity}</div>\r\n                <div style={{color: \"black\"}}>Total: {this.props.amount} </div>\r\n            </div>\r\n            <div className=\"checkout\">\r\n                <button className=\"check\" onClick={this.toggleModal}>checkout</button>\r\n            </div>\r\n            {\r\n            this.state.toggle ?\r\n            <ShowModal amount={this.props.amount} itemQuantity={this.props.itemQuantity} togg={this.toggleModal} /> \r\n            : null\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n}\r\nexport default Footer;","import React, { Component } from 'react'\r\nimport './App.css'\r\nimport MainCotainer from './MainCotainer'\r\nimport Footer from '../containers/Footer'\r\nimport Firebase from 'firebase';\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n    this.state = {\r\n        items: [],\r\n        amount: 0,\r\n        itemQuantity: 0\r\n    }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.Inputitems(); \r\n    }\r\n\r\n    Inputitems = () => {\r\n        let rootRef = Firebase.database().ref('/');\r\n        rootRef.on('value', snapshot => {\r\n          const state = snapshot.val();\r\n          this.setState({\r\n              items: state\r\n          })\r\n        });\r\n    }\r\n\r\n    increaseQuantity = (id, cost) => {\r\n        this.setState({\r\n            items: this.state.items.filter(item => {\r\n            if(item.id === id) {\r\n                 item.orderItem = item.orderItem + 1;\r\n            }\r\n            return true;\r\n         })\r\n        });\r\n        \r\n        this.state.items.filter(item => {\r\n                if(item.id === id) {       \r\n                 this.setState(preState => ({\r\n                   amount: preState.amount + cost,\r\n                   itemQuantity: preState.itemQuantity + 1\r\n                 }))\r\n                }\r\n                return true;\r\n            })\r\n       }\r\n    \r\n    decreaseQuantity = (id, cost) => {\r\n        this.setState({\r\n            items: this.state.items.filter(item => {\r\n            if( item.id === id && item.orderItem > 0 ) {\r\n                 item.orderItem = item.orderItem - 1;\r\n            }\r\n            else if(item.id === id  && item.orderItem === 0) {\r\n                item.orderItem = 0\r\n            }\r\n            return true\r\n        })\r\n    })\r\n\r\n\r\n    this.state.items.filter(item => {\r\n        if( item.id === id && item.orderItem > 0 ) {\r\n            this.setState(preState => ({\r\n                amount: preState.amount - cost,\r\n                itemQuantity: preState.itemQuantity - 1\r\n              }))\r\n        }\r\n        else if(item.id === id  && item.orderItem === 0) {\r\n            this.setState(preState => ({\r\n                amount: preState.amount - cost,\r\n                itemQuantity: preState.itemQuantity - 1\r\n              }))\r\n        }\r\n        return true\r\n    })\r\n     }\r\n    \r\n    renderList = () => {\r\n     return this.state.items.map(cart => {\r\n            return(\r\n                <div key={cart.id}>\r\n                <div className=\"container\">\r\n                    <MainCotainer data={cart} decreaseQuantity={this.decreaseQuantity} increaseQuantity={this.increaseQuantity} />\r\n                </div>\r\n                <hr style={{ position: \"relative\",top: \"15px\"}}/>\r\n\r\n                </div>\r\n                )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {itemQuantity, amount} = this.state;\r\n        return(\r\n            <div className=\"app\">\r\n                  {this.renderList()}\r\n                   <Footer amount={amount} itemQuantity={itemQuantity} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport * as firebase from 'firebase'\n\nvar config ={\n  apiKey: \"AIzaSyAmNAt5OygSnmkSKlrinVw7qJh8AQB1QpI\",\n    authDomain: \"shopping-cart-f8a2a.firebaseapp.com\",\n    databaseURL: \"https://shopping-cart-f8a2a.firebaseio.com\",\n    projectId: \"shopping-cart-f8a2a\",\n    storageBucket: \"shopping-cart-f8a2a.appspot.com\",\n};\n\nfirebase.initializeApp(config);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}